{"version":3,"sources":["components/GifCard.js","components/SearchField.js","App.js","serviceWorker.js","index.js"],"names":["GifCard","props","regORTrendsearch","url","axios","get","then","response","data","titles","GIFsUrl","i","length","push","title","images","original","console","log","setState","GIFurl","catch","err","randomSearch","state","trendSearch","process","this","preProps","preState","search_method","search_keyword","search_number","search_rank","search_tag","API_KEY","concat","regularSearch","display","sequence","Array","keys","urlList","map","src","alt","className","Component","SearchField","handleSelectChange","event","selectValue","target","value","keyword","limit","rating","tag","send","handleKeyWordChange","handleLimitChange","handleRatingChange","handleTagChange","handleSearch","filter","for","type","name","onChange","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d508dc02.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass GifCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        title: [],\r\n        GIFurl: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const API_KEY = process.env.REACT_APP_GIPHY_KEY;\r\n    const trendSearch = `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}`;\r\n    this.regORTrendsearch(trendSearch);\r\n  }\r\n\r\n  componentDidUpdate(preProps, preState){\r\n    if(preProps.search_method !== this.props.search_method ||\r\n      preProps.search_keyword !== this.props.search_keyword ||\r\n      preProps.search_number !== this.props.search_number ||\r\n      preProps.search_rank !== this.props.search_rank ||\r\n      preProps.search_tag !== this.props.search_tag){\r\n\r\n      const API_KEY = process.env.REACT_APP_GIPHY_KEY;\r\n      if(this.props.search_method === 'Trending'){\r\n          \r\n          let trendSearch = `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}`;\r\n          if(this.props.search_number !== ''){\r\n            trendSearch = trendSearch.concat(`&limit=${this.props.search_number}`);\r\n          }\r\n          if(this.props.search_rank){\r\n            trendSearch = trendSearch.concat(`&rating=${this.props.search_rank}`);\r\n          }\r\n          this.regORTrendsearch(trendSearch);\r\n      }\r\n      else if(this.props.search_method === 'Random'){\r\n        let randomSearch = `http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\n        if(this.props.search_tag !== ''){\r\n          randomSearch = randomSearch.concat(`&tag=${this.props.search_tag}`);\r\n        }\r\n        if(this.props.search_rank !== ''){\r\n          randomSearch = randomSearch.concat(`&rating=${this.props.search_rank}`);\r\n        }\r\n        this.randomSearch(randomSearch);\r\n      }\r\n      else if(this.props.search_method === \"Regular\"){\r\n        let regularSearch = `http://api.giphy.com/v1/gifs/search?q=${this.props.search_keyword}&api_key=${API_KEY}`;\r\n        if(this.props.search_number !== ''){\r\n          regularSearch = regularSearch.concat(`&limit=${this.props.search_number}`);\r\n        }\r\n        if(this.props.search_rank){\r\n          regularSearch = regularSearch.concat(`&rating=${this.props.search_rank}`);\r\n        }\r\n        this.regORTrendsearch(regularSearch);\r\n      }\r\n        \r\n    }\r\n    \r\n  }\r\n  regORTrendsearch = (url) => {\r\n    axios\r\n    .get(url)\r\n    .then((response) => {\r\n\r\n      const data = response.data.data;\r\n      let titles = [];\r\n      let GIFsUrl = [];\r\n      for(let i=0; i<data.length; i++){\r\n          titles.push(data[i].title);\r\n          GIFsUrl.push(data[i].images.original.url);\r\n      }\r\n\r\n      console.log(titles.length);\r\n      console.log(GIFsUrl.length);\r\n\r\n\r\n      this.setState({ \r\n          title: titles,\r\n          GIFurl: GIFsUrl,\r\n       });\r\n    })\r\n    .catch((err) => console.log(err));\r\n  };\r\n\r\n  randomSearch = (url) => {\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const data = response.data.data;\r\n        let titles = [], GIFsUrl = [];\r\n        titles.push(data.title);\r\n        GIFsUrl.push(data.images.original.url);\r\n\r\n    \r\n        console.log(titles);\r\n        console.log(GIFsUrl);\r\n\r\n\r\n        this.setState({ \r\n            title: titles,\r\n            GIFurl: GIFsUrl,\r\n        });\r\n      })\r\n     .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    let display;\r\n    let sequence = [...Array(this.state.title.length).keys()];\r\n    //console.log(sequence);\r\n\r\n    if (this.state.title.length === 0) {\r\n      display = <p>Loading...</p>;\r\n    } \r\n    else {    \r\n      const urlList = sequence.map((i) => {\r\n          return (\r\n              <li> \r\n                  <div>\r\n                    <img src= {this.state.GIFurl[i]} alt={this.state.title[i]}/><br/>\r\n                      <h3>{this.state.title[i]}</h3>\r\n                  </div>                 \r\n              </li>\r\n          )\r\n      });\r\n      display = (\r\n        <>\r\n          <ul>\r\n            {urlList}\r\n          </ul>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"GIFS\">   \r\n        {display}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GifCard;","import React, { Component } from \"react\";\r\nimport GifCard from \"./GifCard\";\r\nclass SearchField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        selectValue: '',\r\n        keyword: '',\r\n        limit: '',\r\n        rating: '',\r\n        tag: '',\r\n        send: false,\r\n    };\r\n  }\r\n\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({ \r\n      selectValue: event.target.value, \r\n      keyword: '',\r\n      limit: '',\r\n      rating: '',\r\n      tag: '',\r\n      send: false,\r\n    });\r\n  };\r\n\r\n  handleKeyWordChange = (event) => {\r\n    this.setState({ keyword: event.target.value });\r\n  };\r\n\r\n  handleLimitChange = (event) => {\r\n    this.setState({ limit: event.target.value });\r\n  };\r\n\r\n  handleRatingChange = (event) => {\r\n    this.setState({ rating: event.target.value });\r\n  };\r\n\r\n  handleTagChange = (event) => {\r\n    this.setState({ tag: event.target.value });\r\n  };\r\n\r\n  handleSearch = () => {\r\n    this.setState({ send: true });\r\n  };\r\n\r\n\r\n    render() {\r\n      let filter;\r\n      //console.log(this.state.selectValue);\r\n      if(this.state.selectValue === \"Regular\"){\r\n        filter = (\r\n          <>\r\n            <label for=\"KeyWord\">Key Word: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"KeyWord\"\r\n              value={this.state.keyword}\r\n              onChange={this.handleKeyWordChange}\r\n            />\r\n            <br/>\r\n            <label for=\"Limit\">Number of GIFS: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Limit\"\r\n              value={this.state.limit}\r\n              onChange={this.handleLimitChange}\r\n            />\r\n            <br/>\r\n            <label for=\"Rating\">Choose a search method:</label>\r\n            <select name=\"Rating\" value={this.state.rating} onChange={this.handleRatingChange}>\r\n                <option value=\"\">--Select A Rank--</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"PG\">PG</option>\r\n                <option value=\"PG-13\">PG-13</option>\r\n                <option value=\"R\">R</option>\r\n            </select>\r\n          </>\r\n        );\r\n      }\r\n      else if(this.state.selectValue === \"Random\"){\r\n        filter = (\r\n          <>\r\n            <label for=\"Tag\">Filters results by specified tag: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Tag\"\r\n              value={this.state.tag}\r\n              onChange={this.handleTagChange}\r\n            />\r\n            <br/>\r\n            <label for=\"Rating\">Choose a search method:</label>\r\n            <select name=\"Rating\" value={this.state.rating} onChange={this.handleRatingChange}>\r\n                <option value=\"\">--Select A Rank--</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"PG\">PG</option>\r\n                <option value=\"PG-13\">PG-13</option>\r\n                <option value=\"R\">R</option>\r\n            </select>\r\n          </>\r\n        );\r\n      }\r\n      else if(this.state.selectValue === \"Trending\"){\r\n        filter = (\r\n          <>\r\n            <label for=\"Limit\">Number of GIFS: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Limit\"\r\n              value={this.state.limit}\r\n              onChange={this.handleLimitChange}\r\n            />\r\n            <br/>\r\n            <label for=\"Rating\">Choose a search method:</label>\r\n            <select name=\"Rating\" value={this.state.rating} onChange={this.handleRatingChange}>\r\n                <option value=\"\">--Select A Rank--</option>\r\n                <option value=\"G\">G</option>\r\n                <option value=\"PG\">PG</option>\r\n                <option value=\"PG-13\">PG-13</option>\r\n                <option value=\"R\">R</option>\r\n            </select>\r\n          </>\r\n        );\r\n      }\r\n      \r\n  \r\n      return (\r\n        <>\r\n        <div className=\"SearchField\">\r\n            <label for=\"Search methods\">Choose a search method:</label>\r\n            <select name=\"Search methods\" value={this.state.selectValue} onChange={this.handleSelectChange}>\r\n                <option value=\"\">--Select A Method--</option>\r\n                <option value=\"Regular\">Regular Search</option>\r\n                <option value=\"Trending\">Trending Search</option>\r\n                <option value=\"Random\">Random Search</option>\r\n            </select>\r\n            <button onClick = {this.handleSearch}>Search</button>\r\n            <br/>\r\n            {filter}\r\n            {this.state.send ?  \r\n              <GifCard \r\n                search_method ={this.state.selectValue}\r\n                search_keyword = {this.state.keyword}\r\n                search_number = {this.state.limit}\r\n                search_rank = {this.state.rating}\r\n                search_tag = {this.state.tag} \r\n              />  :\r\n             <GifCard />}\r\n        </div>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default SearchField;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchField from \"./components/SearchField\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>GIPHY Search</h1>\r\n        <SearchField />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}